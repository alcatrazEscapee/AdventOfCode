struct Particle(pos, v, a, alive)

let particles = read_text('./inputs/day20.txt')
    . split('\n')
    . map(fn(line) {
        let pos, v, a = line[:-1]
            . split('>, ')
            . map(fn(part) -> part[3:]
                . split(',')
                . map(int)
                . vector
            )
        Particle(pos, v, a, true)
    })

fn norm1(p) -> p . abs . sum

// 'Infinite' ~ 1000
for _ in range(1000) {
    let positions = dict()
    for i, p in particles . enumerate {
        p->v += p->a
        p->pos += p->v
        if p->alive and p->pos in positions {
            p->alive = false
            particles[positions[p->pos]]->alive = false
        } else {
            positions[p->pos] = i
        }
    }
}

print('Part 1:', particles . enumerate . min_by(fn((_, p)) -> norm1(p->pos)) . [0])
print('Part 2:', particles . filter(->alive) . len)